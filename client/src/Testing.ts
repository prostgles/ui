export const COMMANDS = {
  "config.goToConnDashboard": "Go to connection workspace ",
  "config.details": "",
  "config.bkp": "",
  "config.tableConfig": "",
  "config.bkp.create": "",
  "config.bkp.create.start": "",
  "config.bkp.AutomaticBackups": "",
  "config.bkp.AutomaticBackups.toggle": "",
  "config.ac": "",
  "config.status": "",
  "config.ac.create": "",
  "config.ac.save": "",
  "config.ac.removeRule": "",
  "config.ac.cancel": "",
  "config.ac.createDefault": "",
  "config.ac.edit.user": "Opens select/edit access rule user types",
  "config.ac.edit.user.select": "User type select search box",
  "config.ac.edit.user.select.create":
    "Creates a user type when the search did not yield any results",
  "config.ac.edit.user.select.done": "Closes create user popup",

  "config.ac.edit.type":
    "Rule type button group. Each button.value will contain the type",

  "config.ac.edit.dataAccess": "Data access section with tables/runsql",

  "config.ac.edit.createWorkspaces": "",
  "config.ac.edit.publishedWorkspaces": "",

  "config.ac.edit.typeCustom.tables": "",
  "config.ac.edit.typeAll": "",
  "config.ac.edit.typeSQL": "",
  "config.files": "",
  "config.files.toggle": "",
  "config.files.toggle.confirm": "",
  "config.api": "",
  "config.methods": "",

  "dashboard.window.rowInsert": "Open row insert panel",
  "dashboard.window.rowInsertTop": "Open row insert panel from top filter bar",
  "dashboard.window.runQuery":
    "Executes the current query (selected, block or full)",
  "dashboard.window.cancelQuery": "Cancels the current query",
  "dashboard.window.terminateQuery": "Terminates the current query",
  "dashboard.window.stopListen": "Terminates the current LISTEN query",

  "dashboard.window.fullscreen": "fullscreen",
  "dashboard.window.close": "close",
  "dashboard.window.collapse": "collapse",
  "dashboard.window.viewEditRow": "",
  "dashboard.window.toggleFilterBar": "",
  "dashboard.window.menu": "",

  "dashboard.window.detachChart": "",
  "dashboard.window.collapseChart": "",
  "dashboard.window.closeChart": "",
  "dashboard.window.chartMenu": "",
  "dashboard.window.restoreMinimisedCharts": "",

  "dashboard.goToConnConfig": "Go to connection config",
  "dashboard.menu.settingsToggle": "",
  "dashboard.menu.settings.defaultLayoutType": "",
  "dashboard.menu.settings": "",
  "dashboard.menu": "",
  "dashboard.menu.sqlEditor": "",
  "dashboard.menu.fileTable": "",
  "dashboard.menu.tablesSearchList": "",
  "dashboard.menu.tablesSearchListInput": "",
  "dashboard.menu.createTable": "",
  "dashboard.menu.createTable.tableName": "",
  "dashboard.menu.createTable.addColumn": "",
  "dashboard.menu.createTable.addColumn.confirm": "",
  "dashboard.menu.createTable.confirm": "",

  "FormField.clear": "Clear a FormField",

  "SmartForm.close": "Close dialog",
  "SmartForm.delete": "Deletes row",
  "SmartForm.delete.confirm": "Confirms Deleting a row",
  "SmartForm.update": "update row",
  "SmartForm.update.confirm": "Confirms update a row",
  "SmartForm.insert": "Confirms Deleting a row",
  "SmartForm.clone": "Confirms Deleting a row",

  "SQLSmartEditor.Run": "Run the sql statement",

  "SearchList.toggleAll": "",
  "SearchList.List": "",

  FieldFilterControl: "",
  "FieldFilterControl.type": "",
  "FieldFilterControl.type.custom": "",
  "FieldFilterControl.type.except": "",
  "FieldFilterControl.select": "",
  "RenderFilter.edit": "",
  "RenderFilter.done": "",

  ForcedFilterControl: "",
  "ForcedFilterControl.type": "",
  "ForcedFilterControl.type.disabled": "",
  "ForcedFilterControl.type.enabled": "",

  CheckFilterControl: "",
  "CheckFilterControl.type": "",
  "CheckFilterControl.type.disabled": "",
  "CheckFilterControl.type.enabled": "",

  selectRule: "",
  selectRuleAdvanced: "",
  updateRule: "",
  updateRuleAdvanced: "",
  deleteRule: "",
  deleteRuleAdvanced: "",
  insertRule: "",
  insertRuleAdvanced: "",
  syncRule: "",
  syncRuleAdvanced: "",

  SearchAll: "",
  SmartAddFilter: "",
  FilterWrapper: "",

  FileBtn: "",

  "ForcedDataControl.toggle": "",
  "ForcedDataControl.addColumn": "",
  "TablePermissionControls.close": "",
  "TablePermissionControls.done": "",

  "connections.add": "add",

  "Connection.edit": "",
  "Connection.edit.updateOrCreateConfirm": "",
  "Connection.edit.delete": "",
  "Connection.edit.delete.dropDatabase": "",
  "Connection.edit.delete.confirm": "",

  "ConnectionServer.add": "",
  "ConnectionServer.add.newDatabase": "",
  "ConnectionServer.NewDbName": "",
  "ConnectionServer.add.confirm": "",

  "SmartFilterBar.toggle": "",
  "SmartFilterBar.rightOptions.show": "",
  "SmartFilterBar.rightOptions.update": "",
  "SmartFilterBar.rightOptions.delete": "",

  "ColumnEditor.name": "",
  "ColumnEditor.dataType": "",

  AddColumnMenu: "",

  WorkspaceAddBtn: "",
  WorkspaceMenuDropDown: "",
  "WorkspaceMenuDropDown.WorkspaceAddBtn": "",
  "WorkspaceMenu.SearchList": "",
  "WorkspaceMenu.CloneWorkspace": "",
  WorkspaceDeleteBtn: "",
  "WorkspaceDeleteBtn.Confirm": "",

  JoinPathSelectorV2: "",
  "LinkedColumn.Add": "",
  "LinkedColumn.ColumnList.toggle": "",

  "SummariseColumn.toggle": "",
  FunctionSelector: "",
  "SummariseColumn.apply": "",
  "Popup.close": "",
  "Popup.content": "",
  "LinkedColumn.ColumnListMenu": "",
  "AddChartMenu.Map": "",
  "AddChartMenu.Timechart": "",
  W_TimeChart: "",
  "W_TimeChart.ActiveRow": "",

  "CloseSaveSQLPopup.delete": "",

  "schema-diagram": "",
  AddColumnReference: "",
  "SmartFormFieldOptions.AttachFile": "",
  RuleToggle: "",
  "table.options.displayMode": "",
  "table.options.cardView.groupBy": "",
  "table.options.cardView.orderBy": "",
  "CardView.row": "",
  "CardView.group": "",
  "CardView.DragHeader": "",

  "CreateFileColumn.confirm": "",
  "AppDemo.start": "",
  MenuList: "",
  ComparablePGPolicies: "",
  "ConnectionServer.SampleSchemas": "",
  "dashboard.goToConnections": "",
  QuickAddComputedColumn: "",
  "SmartSelect.Done": "",
  "SmartAddFilter.JoinTo": "",
  "SmartAddFilter.toggleIncludeLinkedColumns": "",
  ContextDataSelector: "",
  ClickCatchOverlay: "",
  "BackupControls.Restore": "",
  ChartLayerManager: "",
  "App.colorScheme": "",
  "ElectronSetup.Next": "",
  "ElectronSetup.Back": "",
  PostgresInstallationInstructions: "",
  "PostgresInstallationInstructions.Close": "",
  "ElectronSetup.Done": "",
  MoreOptionsToggle: "",
  SmartCardList: "",
  "AutomaticBackups.destination": "",
  "AutomaticBackups.frequency": "",
  "AutomaticBackups.hourOfDay": "",
  "WorkspaceAddBtn.Create": "",
  "ChartLayerManager.AddChartLayer.addLayer": "",
  ConnectionSelector: "",
  "Setup2FA.Enable": "",
  "Setup2FA.Enable.GenerateQR": "",
  "Setup2FA.Enable.CantScanQR": "",
  "Setup2FA.Enable.Base64Secret": "",
  "Setup2FA.Enable.ConfirmCode": "",
  "Setup2FA.Enable.Confirm": "",
  "Setup2FA.Disable": "",
  "DashboardMenuHeader.togglePinned": "",
  "BackupControls.DeleteAll": "",
  "BackupControls.DeleteAll.Confirm": "",
  "JoinedRecords.toggle": "",
  "ProjectConnection.error": "",
  NotFound: "",
  "NotFound.goHome": "",
  "ConnectionServer.NewUserName": "",
  "ConnectionServer.NewUserPassword": "",
  "ConnectionServer.withNewOwnerToggle": "",
  "W_Table.TableNotFound": "",
  JoinedRecords: "",
  "SmartCard.viewEditRow": "",
  "TimeChartLayerOptions.yAxis": "",
  "TimeChartLayerOptions.aggFunc": "",
  "TimeChartLayerOptions.aggFunc.select": "",
  "TimeChartLayerOptions.groupBy": "",
  "TimeChartLayerOptions.numericColumn": "",
  "AgeFilter.comparator": "",
  "AgeFilter.argsLeftToRight": "",
  "Login.error": "",
  SchemaFilter: "",
  AskLLMAccessControl: "",
  "AskLLMAccessControl.AllowAll": "",
  "Chat.send": "",
  AskLLM: "",
  "AskLLM.popup": "",
  SetupLLMCredentials: "",
  "SetupLLMCredentials.free": "",
  "SetupLLMCredentials.api": "",
  "AskLLMAccessControl.llm_daily_limit": "",
  "Pagination.page": "",
  MapExtentBehavior: "",
  AddLLMCredentialForm: "",
  "AddLLMCredentialForm.Save": "",
  "AddLLMCredentialForm.Provider": "",
} as const;
export type Command = keyof typeof COMMANDS;

export type TestSelectors = {
  "data-command"?: Command;
  "data-key"?: string;
  id?: string;
};

export const dataCommand = (cmd: Command): { "data-command": Command } => ({
  "data-command": cmd,
});
export const getCommandElemSelector = (cmd: Command) => {
  return `[data-command=${JSON.stringify(cmd)}]`;
};
